//TODO: Combine the reusable code between the two functions;

var createSymbols = function(context) {
  try {
    var api = context.api();
    var doc = api.selectedDocument;
    var page = doc.selectedPage;

    var document = context.document;
    var selection = context.selection;
    var selectionsArray = selection.objectEnumerator();
    var layer;

    //Loop over the selected layers/groups and add them to the symbols page
    while(selection = selectionsArray.nextObject()) {
        var symbols = MSLayerArray.arrayWithLayers([selection]);
        var symbolName = selection.name();
        var createSymbol = MSSymbolCreator.createSymbolFromLayers_withName_onSymbolsPage(symbols, symbolName, true);
    }

  } catch(e) {
    log(e);
  }
}

var createCustomSymbols = function(context) {
  try {
    var api = context.api();
    var doc = api.selectedDocument;
    var page = doc.selectedPage;

    var document = context.document;
    var selection = context.selection;
    var selectionsArray = selection.objectEnumerator();
    var layer;
    var idx = 0;

    var symbolNameOverride = api.getStringFromUser('Custom Name: [YOUR TEXT]-#', '');

    //handle cancel button
    if(symbolNameOverride == nil) {
      return
    }

    //handle submission of empty input
    //TODO: Disable OK button until the user has entered some text into the input
    if(symbolNameOverride == '') {
      api.message('Please enter a custom symbol name.');
      return
    }

    //Loop over the selected layers/groups and add them to the symbols page
    while(selection = selectionsArray.nextObject()) {
        idx++
        var symbols = MSLayerArray.arrayWithLayers([selection]);
        //TODO: Clean this up
        var symbolName = symbolNameOverride + '-' + idx;
        var createSymbol = MSSymbolCreator.createSymbolFromLayers_withName_onSymbolsPage(symbols, symbolName, true);
    }

  } catch(e) {
    log(e);
  }
}
